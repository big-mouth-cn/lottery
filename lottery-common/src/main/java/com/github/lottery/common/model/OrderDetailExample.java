package com.github.lottery.common.model;

import java.util.ArrayList;
import java.util.List;

public class OrderDetailExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table orders_detail
     *
     * @mbggenerated Sun Jun 24 16:05:35 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table orders_detail
     *
     * @mbggenerated Sun Jun 24 16:05:35 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table orders_detail
     *
     * @mbggenerated Sun Jun 24 16:05:35 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders_detail
     *
     * @mbggenerated Sun Jun 24 16:05:35 CST 2018
     */
    public OrderDetailExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders_detail
     *
     * @mbggenerated Sun Jun 24 16:05:35 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders_detail
     *
     * @mbggenerated Sun Jun 24 16:05:35 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders_detail
     *
     * @mbggenerated Sun Jun 24 16:05:35 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders_detail
     *
     * @mbggenerated Sun Jun 24 16:05:35 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders_detail
     *
     * @mbggenerated Sun Jun 24 16:05:35 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders_detail
     *
     * @mbggenerated Sun Jun 24 16:05:35 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders_detail
     *
     * @mbggenerated Sun Jun 24 16:05:35 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders_detail
     *
     * @mbggenerated Sun Jun 24 16:05:35 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders_detail
     *
     * @mbggenerated Sun Jun 24 16:05:35 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders_detail
     *
     * @mbggenerated Sun Jun 24 16:05:35 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table orders_detail
     *
     * @mbggenerated Sun Jun 24 16:05:35 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNo1IsNull() {
            addCriterion("no1 is null");
            return (Criteria) this;
        }

        public Criteria andNo1IsNotNull() {
            addCriterion("no1 is not null");
            return (Criteria) this;
        }

        public Criteria andNo1EqualTo(Integer value) {
            addCriterion("no1 =", value, "no1");
            return (Criteria) this;
        }

        public Criteria andNo1NotEqualTo(Integer value) {
            addCriterion("no1 <>", value, "no1");
            return (Criteria) this;
        }

        public Criteria andNo1GreaterThan(Integer value) {
            addCriterion("no1 >", value, "no1");
            return (Criteria) this;
        }

        public Criteria andNo1GreaterThanOrEqualTo(Integer value) {
            addCriterion("no1 >=", value, "no1");
            return (Criteria) this;
        }

        public Criteria andNo1LessThan(Integer value) {
            addCriterion("no1 <", value, "no1");
            return (Criteria) this;
        }

        public Criteria andNo1LessThanOrEqualTo(Integer value) {
            addCriterion("no1 <=", value, "no1");
            return (Criteria) this;
        }

        public Criteria andNo1In(List<Integer> values) {
            addCriterion("no1 in", values, "no1");
            return (Criteria) this;
        }

        public Criteria andNo1NotIn(List<Integer> values) {
            addCriterion("no1 not in", values, "no1");
            return (Criteria) this;
        }

        public Criteria andNo1Between(Integer value1, Integer value2) {
            addCriterion("no1 between", value1, value2, "no1");
            return (Criteria) this;
        }

        public Criteria andNo1NotBetween(Integer value1, Integer value2) {
            addCriterion("no1 not between", value1, value2, "no1");
            return (Criteria) this;
        }

        public Criteria andNo2IsNull() {
            addCriterion("no2 is null");
            return (Criteria) this;
        }

        public Criteria andNo2IsNotNull() {
            addCriterion("no2 is not null");
            return (Criteria) this;
        }

        public Criteria andNo2EqualTo(Integer value) {
            addCriterion("no2 =", value, "no2");
            return (Criteria) this;
        }

        public Criteria andNo2NotEqualTo(Integer value) {
            addCriterion("no2 <>", value, "no2");
            return (Criteria) this;
        }

        public Criteria andNo2GreaterThan(Integer value) {
            addCriterion("no2 >", value, "no2");
            return (Criteria) this;
        }

        public Criteria andNo2GreaterThanOrEqualTo(Integer value) {
            addCriterion("no2 >=", value, "no2");
            return (Criteria) this;
        }

        public Criteria andNo2LessThan(Integer value) {
            addCriterion("no2 <", value, "no2");
            return (Criteria) this;
        }

        public Criteria andNo2LessThanOrEqualTo(Integer value) {
            addCriterion("no2 <=", value, "no2");
            return (Criteria) this;
        }

        public Criteria andNo2In(List<Integer> values) {
            addCriterion("no2 in", values, "no2");
            return (Criteria) this;
        }

        public Criteria andNo2NotIn(List<Integer> values) {
            addCriterion("no2 not in", values, "no2");
            return (Criteria) this;
        }

        public Criteria andNo2Between(Integer value1, Integer value2) {
            addCriterion("no2 between", value1, value2, "no2");
            return (Criteria) this;
        }

        public Criteria andNo2NotBetween(Integer value1, Integer value2) {
            addCriterion("no2 not between", value1, value2, "no2");
            return (Criteria) this;
        }

        public Criteria andNo3IsNull() {
            addCriterion("no3 is null");
            return (Criteria) this;
        }

        public Criteria andNo3IsNotNull() {
            addCriterion("no3 is not null");
            return (Criteria) this;
        }

        public Criteria andNo3EqualTo(Integer value) {
            addCriterion("no3 =", value, "no3");
            return (Criteria) this;
        }

        public Criteria andNo3NotEqualTo(Integer value) {
            addCriterion("no3 <>", value, "no3");
            return (Criteria) this;
        }

        public Criteria andNo3GreaterThan(Integer value) {
            addCriterion("no3 >", value, "no3");
            return (Criteria) this;
        }

        public Criteria andNo3GreaterThanOrEqualTo(Integer value) {
            addCriterion("no3 >=", value, "no3");
            return (Criteria) this;
        }

        public Criteria andNo3LessThan(Integer value) {
            addCriterion("no3 <", value, "no3");
            return (Criteria) this;
        }

        public Criteria andNo3LessThanOrEqualTo(Integer value) {
            addCriterion("no3 <=", value, "no3");
            return (Criteria) this;
        }

        public Criteria andNo3In(List<Integer> values) {
            addCriterion("no3 in", values, "no3");
            return (Criteria) this;
        }

        public Criteria andNo3NotIn(List<Integer> values) {
            addCriterion("no3 not in", values, "no3");
            return (Criteria) this;
        }

        public Criteria andNo3Between(Integer value1, Integer value2) {
            addCriterion("no3 between", value1, value2, "no3");
            return (Criteria) this;
        }

        public Criteria andNo3NotBetween(Integer value1, Integer value2) {
            addCriterion("no3 not between", value1, value2, "no3");
            return (Criteria) this;
        }

        public Criteria andNo4IsNull() {
            addCriterion("no4 is null");
            return (Criteria) this;
        }

        public Criteria andNo4IsNotNull() {
            addCriterion("no4 is not null");
            return (Criteria) this;
        }

        public Criteria andNo4EqualTo(Integer value) {
            addCriterion("no4 =", value, "no4");
            return (Criteria) this;
        }

        public Criteria andNo4NotEqualTo(Integer value) {
            addCriterion("no4 <>", value, "no4");
            return (Criteria) this;
        }

        public Criteria andNo4GreaterThan(Integer value) {
            addCriterion("no4 >", value, "no4");
            return (Criteria) this;
        }

        public Criteria andNo4GreaterThanOrEqualTo(Integer value) {
            addCriterion("no4 >=", value, "no4");
            return (Criteria) this;
        }

        public Criteria andNo4LessThan(Integer value) {
            addCriterion("no4 <", value, "no4");
            return (Criteria) this;
        }

        public Criteria andNo4LessThanOrEqualTo(Integer value) {
            addCriterion("no4 <=", value, "no4");
            return (Criteria) this;
        }

        public Criteria andNo4In(List<Integer> values) {
            addCriterion("no4 in", values, "no4");
            return (Criteria) this;
        }

        public Criteria andNo4NotIn(List<Integer> values) {
            addCriterion("no4 not in", values, "no4");
            return (Criteria) this;
        }

        public Criteria andNo4Between(Integer value1, Integer value2) {
            addCriterion("no4 between", value1, value2, "no4");
            return (Criteria) this;
        }

        public Criteria andNo4NotBetween(Integer value1, Integer value2) {
            addCriterion("no4 not between", value1, value2, "no4");
            return (Criteria) this;
        }

        public Criteria andNo5IsNull() {
            addCriterion("no5 is null");
            return (Criteria) this;
        }

        public Criteria andNo5IsNotNull() {
            addCriterion("no5 is not null");
            return (Criteria) this;
        }

        public Criteria andNo5EqualTo(Integer value) {
            addCriterion("no5 =", value, "no5");
            return (Criteria) this;
        }

        public Criteria andNo5NotEqualTo(Integer value) {
            addCriterion("no5 <>", value, "no5");
            return (Criteria) this;
        }

        public Criteria andNo5GreaterThan(Integer value) {
            addCriterion("no5 >", value, "no5");
            return (Criteria) this;
        }

        public Criteria andNo5GreaterThanOrEqualTo(Integer value) {
            addCriterion("no5 >=", value, "no5");
            return (Criteria) this;
        }

        public Criteria andNo5LessThan(Integer value) {
            addCriterion("no5 <", value, "no5");
            return (Criteria) this;
        }

        public Criteria andNo5LessThanOrEqualTo(Integer value) {
            addCriterion("no5 <=", value, "no5");
            return (Criteria) this;
        }

        public Criteria andNo5In(List<Integer> values) {
            addCriterion("no5 in", values, "no5");
            return (Criteria) this;
        }

        public Criteria andNo5NotIn(List<Integer> values) {
            addCriterion("no5 not in", values, "no5");
            return (Criteria) this;
        }

        public Criteria andNo5Between(Integer value1, Integer value2) {
            addCriterion("no5 between", value1, value2, "no5");
            return (Criteria) this;
        }

        public Criteria andNo5NotBetween(Integer value1, Integer value2) {
            addCriterion("no5 not between", value1, value2, "no5");
            return (Criteria) this;
        }

        public Criteria andNo6IsNull() {
            addCriterion("no6 is null");
            return (Criteria) this;
        }

        public Criteria andNo6IsNotNull() {
            addCriterion("no6 is not null");
            return (Criteria) this;
        }

        public Criteria andNo6EqualTo(Integer value) {
            addCriterion("no6 =", value, "no6");
            return (Criteria) this;
        }

        public Criteria andNo6NotEqualTo(Integer value) {
            addCriterion("no6 <>", value, "no6");
            return (Criteria) this;
        }

        public Criteria andNo6GreaterThan(Integer value) {
            addCriterion("no6 >", value, "no6");
            return (Criteria) this;
        }

        public Criteria andNo6GreaterThanOrEqualTo(Integer value) {
            addCriterion("no6 >=", value, "no6");
            return (Criteria) this;
        }

        public Criteria andNo6LessThan(Integer value) {
            addCriterion("no6 <", value, "no6");
            return (Criteria) this;
        }

        public Criteria andNo6LessThanOrEqualTo(Integer value) {
            addCriterion("no6 <=", value, "no6");
            return (Criteria) this;
        }

        public Criteria andNo6In(List<Integer> values) {
            addCriterion("no6 in", values, "no6");
            return (Criteria) this;
        }

        public Criteria andNo6NotIn(List<Integer> values) {
            addCriterion("no6 not in", values, "no6");
            return (Criteria) this;
        }

        public Criteria andNo6Between(Integer value1, Integer value2) {
            addCriterion("no6 between", value1, value2, "no6");
            return (Criteria) this;
        }

        public Criteria andNo6NotBetween(Integer value1, Integer value2) {
            addCriterion("no6 not between", value1, value2, "no6");
            return (Criteria) this;
        }

        public Criteria andNo7IsNull() {
            addCriterion("no7 is null");
            return (Criteria) this;
        }

        public Criteria andNo7IsNotNull() {
            addCriterion("no7 is not null");
            return (Criteria) this;
        }

        public Criteria andNo7EqualTo(Integer value) {
            addCriterion("no7 =", value, "no7");
            return (Criteria) this;
        }

        public Criteria andNo7NotEqualTo(Integer value) {
            addCriterion("no7 <>", value, "no7");
            return (Criteria) this;
        }

        public Criteria andNo7GreaterThan(Integer value) {
            addCriterion("no7 >", value, "no7");
            return (Criteria) this;
        }

        public Criteria andNo7GreaterThanOrEqualTo(Integer value) {
            addCriterion("no7 >=", value, "no7");
            return (Criteria) this;
        }

        public Criteria andNo7LessThan(Integer value) {
            addCriterion("no7 <", value, "no7");
            return (Criteria) this;
        }

        public Criteria andNo7LessThanOrEqualTo(Integer value) {
            addCriterion("no7 <=", value, "no7");
            return (Criteria) this;
        }

        public Criteria andNo7In(List<Integer> values) {
            addCriterion("no7 in", values, "no7");
            return (Criteria) this;
        }

        public Criteria andNo7NotIn(List<Integer> values) {
            addCriterion("no7 not in", values, "no7");
            return (Criteria) this;
        }

        public Criteria andNo7Between(Integer value1, Integer value2) {
            addCriterion("no7 between", value1, value2, "no7");
            return (Criteria) this;
        }

        public Criteria andNo7NotBetween(Integer value1, Integer value2) {
            addCriterion("no7 not between", value1, value2, "no7");
            return (Criteria) this;
        }

        public Criteria andNo8IsNull() {
            addCriterion("no8 is null");
            return (Criteria) this;
        }

        public Criteria andNo8IsNotNull() {
            addCriterion("no8 is not null");
            return (Criteria) this;
        }

        public Criteria andNo8EqualTo(Integer value) {
            addCriterion("no8 =", value, "no8");
            return (Criteria) this;
        }

        public Criteria andNo8NotEqualTo(Integer value) {
            addCriterion("no8 <>", value, "no8");
            return (Criteria) this;
        }

        public Criteria andNo8GreaterThan(Integer value) {
            addCriterion("no8 >", value, "no8");
            return (Criteria) this;
        }

        public Criteria andNo8GreaterThanOrEqualTo(Integer value) {
            addCriterion("no8 >=", value, "no8");
            return (Criteria) this;
        }

        public Criteria andNo8LessThan(Integer value) {
            addCriterion("no8 <", value, "no8");
            return (Criteria) this;
        }

        public Criteria andNo8LessThanOrEqualTo(Integer value) {
            addCriterion("no8 <=", value, "no8");
            return (Criteria) this;
        }

        public Criteria andNo8In(List<Integer> values) {
            addCriterion("no8 in", values, "no8");
            return (Criteria) this;
        }

        public Criteria andNo8NotIn(List<Integer> values) {
            addCriterion("no8 not in", values, "no8");
            return (Criteria) this;
        }

        public Criteria andNo8Between(Integer value1, Integer value2) {
            addCriterion("no8 between", value1, value2, "no8");
            return (Criteria) this;
        }

        public Criteria andNo8NotBetween(Integer value1, Integer value2) {
            addCriterion("no8 not between", value1, value2, "no8");
            return (Criteria) this;
        }

        public Criteria andNo9IsNull() {
            addCriterion("no9 is null");
            return (Criteria) this;
        }

        public Criteria andNo9IsNotNull() {
            addCriterion("no9 is not null");
            return (Criteria) this;
        }

        public Criteria andNo9EqualTo(Integer value) {
            addCriterion("no9 =", value, "no9");
            return (Criteria) this;
        }

        public Criteria andNo9NotEqualTo(Integer value) {
            addCriterion("no9 <>", value, "no9");
            return (Criteria) this;
        }

        public Criteria andNo9GreaterThan(Integer value) {
            addCriterion("no9 >", value, "no9");
            return (Criteria) this;
        }

        public Criteria andNo9GreaterThanOrEqualTo(Integer value) {
            addCriterion("no9 >=", value, "no9");
            return (Criteria) this;
        }

        public Criteria andNo9LessThan(Integer value) {
            addCriterion("no9 <", value, "no9");
            return (Criteria) this;
        }

        public Criteria andNo9LessThanOrEqualTo(Integer value) {
            addCriterion("no9 <=", value, "no9");
            return (Criteria) this;
        }

        public Criteria andNo9In(List<Integer> values) {
            addCriterion("no9 in", values, "no9");
            return (Criteria) this;
        }

        public Criteria andNo9NotIn(List<Integer> values) {
            addCriterion("no9 not in", values, "no9");
            return (Criteria) this;
        }

        public Criteria andNo9Between(Integer value1, Integer value2) {
            addCriterion("no9 between", value1, value2, "no9");
            return (Criteria) this;
        }

        public Criteria andNo9NotBetween(Integer value1, Integer value2) {
            addCriterion("no9 not between", value1, value2, "no9");
            return (Criteria) this;
        }

        public Criteria andNo10IsNull() {
            addCriterion("no10 is null");
            return (Criteria) this;
        }

        public Criteria andNo10IsNotNull() {
            addCriterion("no10 is not null");
            return (Criteria) this;
        }

        public Criteria andNo10EqualTo(Integer value) {
            addCriterion("no10 =", value, "no10");
            return (Criteria) this;
        }

        public Criteria andNo10NotEqualTo(Integer value) {
            addCriterion("no10 <>", value, "no10");
            return (Criteria) this;
        }

        public Criteria andNo10GreaterThan(Integer value) {
            addCriterion("no10 >", value, "no10");
            return (Criteria) this;
        }

        public Criteria andNo10GreaterThanOrEqualTo(Integer value) {
            addCriterion("no10 >=", value, "no10");
            return (Criteria) this;
        }

        public Criteria andNo10LessThan(Integer value) {
            addCriterion("no10 <", value, "no10");
            return (Criteria) this;
        }

        public Criteria andNo10LessThanOrEqualTo(Integer value) {
            addCriterion("no10 <=", value, "no10");
            return (Criteria) this;
        }

        public Criteria andNo10In(List<Integer> values) {
            addCriterion("no10 in", values, "no10");
            return (Criteria) this;
        }

        public Criteria andNo10NotIn(List<Integer> values) {
            addCriterion("no10 not in", values, "no10");
            return (Criteria) this;
        }

        public Criteria andNo10Between(Integer value1, Integer value2) {
            addCriterion("no10 between", value1, value2, "no10");
            return (Criteria) this;
        }

        public Criteria andNo10NotBetween(Integer value1, Integer value2) {
            addCriterion("no10 not between", value1, value2, "no10");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table orders_detail
     *
     * @mbggenerated do_not_delete_during_merge Sun Jun 24 16:05:35 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table orders_detail
     *
     * @mbggenerated Sun Jun 24 16:05:35 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}